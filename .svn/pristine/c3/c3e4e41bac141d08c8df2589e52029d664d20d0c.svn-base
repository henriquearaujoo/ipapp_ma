package br.com.speedy.appapp_ma.dialog;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import br.com.speedy.appapp_ma.R;
import br.com.speedy.appapp_ma.model.Armazenamento;
import br.com.speedy.appapp_ma.util.ArmazenamentoRetiradaAux;
import br.com.speedy.appapp_ma.util.ItemResumo;
import br.com.speedy.appapp_ma.util.PeixeDisponivel;
import br.com.speedy.appapp_ma.util.SessionApp;

/**
 * TODO: document your custom view class.
 */
public class DialogDadosSaida extends DialogFragment {

    private EditText editTextPeso;

    private EditText editTextQtdeEmbalagem;

    private Spinner spnDestino;

    private PeixeDisponivel armazenamento;

    private Context context;

    private AlertDialog alertDialog;

    public DialogDadosSaida(){

    }

    public DialogDadosSaida(Context context){
        this.context = context;
    }

    @NonNull
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {

        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        // Get the layout inflater
        LayoutInflater inflater = getActivity().getLayoutInflater();

        View view = inflater.inflate(R.layout.sample_dialog_dados_saida, null);

        editTextPeso = (EditText) view.findViewById(R.id.edtDSPeso);

        editTextQtdeEmbalagem = (EditText) view.findViewById(R.id.edtDSQtdeEmbalagem);

        spnDestino = (Spinner) view.findViewById(R.id.spnDSDestino);

        List<String> itens = new ArrayList<String>();
        itens.add("Processo");
        itens.add("Descarte");

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, itens);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spnDestino.setAdapter(adapter);

        // Inflate and set the layout for the dialog
        // Pass null as the parent view because its going in the dialog layout
        builder.setView(view)
                // Add action buttons
                .setPositiveButton("Salvar", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int id) {

                        if(editTextPeso.getText() != null && !editTextPeso.getText().toString().isEmpty() && editTextQtdeEmbalagem.getText() != null && !editTextQtdeEmbalagem.getText().toString().isEmpty()){
                            try {
                                ItemResumo itemResumo = null;

                                if (SessionApp.getItens() == null || SessionApp.getItens().size() == 0) {
                                    SessionApp.setItens(new ArrayList<ItemResumo>());
                                } else {
                                    for (ItemResumo i : SessionApp.getItens()) {
                                        if (i.getTipo().equals("Retirar")) {
                                            itemResumo = i;
                                            break;
                                        }
                                    }
                                }

                                if (itemResumo == null) {
                                    itemResumo = new ItemResumo();
                                    itemResumo.setTipo("Retirar");
                                    SessionApp.getItens().add(itemResumo);
                                }

                                ArmazenamentoRetiradaAux aux = new ArmazenamentoRetiradaAux();
                                aux.setPeso(new BigDecimal(editTextPeso.getText().toString()));
                                aux.setPeixe(SessionApp.getPeixe());
                                aux.setDestino((String) spnDestino.getSelectedItem());
                                aux.setQtdeEmbalagem(Integer.parseInt(editTextQtdeEmbalagem.getText().toString()));

                                if (itemResumo.getListaAR() == null || itemResumo.getListaAR().size() == 0) {
                                    itemResumo.setListaAR(new ArrayList<ArmazenamentoRetiradaAux>());
                                    itemResumo.getListaAR().add(aux);
                                }else
                                    itemResumo.getListaAR().add(aux);

                                showDialogInformacao("Retirada adicionada com sucesso.");
                            }catch (Exception e){
                                showDialogAdvertencia("Não foi possivel adicionar a retirada.");
                            }
                        }else{
                            showDialogAdvertencia("Preencha todos os campos obrigatórios (*) antes de salvar.");
                        }

                        }
                    }

                    )
                            .

                    setNegativeButton("Fechar",new DialogInterface.OnClickListener() {
                        public void onClick (DialogInterface dialog,int id){
                            alertDialog.cancel();
                        }
                    }

                    );

                    builder.setTitle("Dados da retirada");

                    alertDialog=builder.create();

                    return alertDialog;
                }

    public void showDialogAdvertencia(String msg){
        final AlertDialog.Builder builder = new AlertDialog.Builder(context);

        builder.setTitle("Advertência");

        builder.setIcon(R.drawable.ic_alert_grey600_48dp);

        builder.setMessage(msg);

        builder.setPositiveButton("Fechar", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                dialog.cancel();
                alertDialog.show();
            }
        });

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    public void showDialogInformacao(String msg){
        final AlertDialog.Builder builder = new AlertDialog.Builder(context);

        builder.setTitle("Informação");

        builder.setIcon(R.drawable.ic_information_grey600_48dp);

        builder.setMessage(msg);

        builder.setPositiveButton("Fechar", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                dialog.cancel();
            }
        });

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }
}
