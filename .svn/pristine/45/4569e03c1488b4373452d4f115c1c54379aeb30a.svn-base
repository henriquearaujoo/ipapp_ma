package br.com.speedy.appapp_ma.dialog;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.v4.app.DialogFragment;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import br.com.speedy.appapp_ma.R;
import br.com.speedy.appapp_ma.model.Armazenamento;
import br.com.speedy.appapp_ma.util.ArmazenamentoRetiradaAux;
import br.com.speedy.appapp_ma.util.ItemResumo;
import br.com.speedy.appapp_ma.util.PeixeDisponivel;
import br.com.speedy.appapp_ma.util.SessionApp;

/**
 * TODO: document your custom view class.
 */
public class DialogDadosSaida extends DialogFragment {

    private EditText editTextPeso;

    private Spinner spnDestino;

    private PeixeDisponivel armazenamento;

    public DialogDadosSaida(){

    }

    /*public DialogDadosPeixe(Peixe peixe){
        this.peixe = peixe;
    }*/

    @NonNull
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {

        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        // Get the layout inflater
        LayoutInflater inflater = getActivity().getLayoutInflater();

        View view = inflater.inflate(R.layout.sample_dialog_dados_saida, null);

        this.armazenamento = SessionApp.getPeixeDisponivelSaida();

        editTextPeso = (EditText) view.findViewById(R.id.edtSPeso);

        spnDestino = (Spinner) view.findViewById(R.id.spnSDestino);

        List<String> itens = new ArrayList<String>();
        itens.add("Processo");
        itens.add("Destino 2");
        itens.add("Destino 3");

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_item, itens);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spnDestino.setAdapter(adapter);

        // Inflate and set the layout for the dialog
        // Pass null as the parent view because its going in the dialog layout
        builder.setView(view)
                // Add action buttons
                .setPositiveButton("Salvar", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int id) {
                        ItemResumo itemResumo = null;

                        if (SessionApp.getItens() == null || SessionApp.getItens().size() == 0) {
                            SessionApp.setItens(new ArrayList<ItemResumo>());
                        } else {
                            for (ItemResumo i : SessionApp.getItens()) {
                                if (i.getTipo().equals("Retirar")) {
                                    itemResumo = i;
                                    break;
                                }
                            }
                        }

                        if (itemResumo == null) {
                            itemResumo = new ItemResumo();
                            itemResumo.setTipo("Retirar");
                            SessionApp.getItens().add(itemResumo);
                        }

                        ArmazenamentoRetiradaAux aux = new ArmazenamentoRetiradaAux();
                        aux.setPeso(new BigDecimal(editTextPeso.getText().toString()));
                        aux.setDescricaoPeixe(armazenamento.getDescricao());
                        aux.setDestino((String) spnDestino.getSelectedItem());

                        if (itemResumo.getListaAR() == null || itemResumo.getListaAR().size() == 0) {
                            itemResumo.setListaAR(new ArrayList<ArmazenamentoRetiradaAux>());
                            itemResumo.getListaAR().add(aux);
                        }else
                            itemResumo.getListaAR().add(aux);

                        //showDialogSucesso("Retirad+a adicionada com sucesso.");

                    }
                })
                .setNegativeButton("Fechar", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        DialogDadosSaida.this.getDialog().cancel();
                    }
                });

        builder.setTitle("Dados da retirada");

        return builder.create();
    }

    public void showDialogSucesso(String msg){
        final AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());

        builder.setTitle("Sucesso");

        builder.setMessage(msg);

        builder.setPositiveButton("Fechar", new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface dialog, int id) {
                dialog.cancel();
            }
        });

        AlertDialog dialog = builder.create();
        dialog.show();
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }
}
